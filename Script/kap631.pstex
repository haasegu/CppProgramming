%!PS-Adobe-2.0 EPSF-2.0
%%Title: kap631.pstex
%%Creator: fig2dev Version 3.2.3 Patchlevel 
%%CreationDate: Tue Oct 16 10:43:05 2001
%%For: ghaase@falkor (Gundolf Haase)
%%BoundingBox: 0 0 344 101
%%Magnification: 0.5000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 101 moveto 0 0 lineto 344 0 lineto 344 101 lineto closepath clip newpath
1.0 111.0 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% left-shingles
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 48 48 true [ 48 0 0 -48 0 48 ]
	{<000000000001000000000001000000000002000000000002
	000000000004000000000004000000000008000000000008
	000000000010000000000010000000000020000000000020
	000000000040000000000040000000000080ffffffffffff
	000000010000000000010000000000020000000000020000
	000000040000000000040000000000080000000000080000
	000000100000000000100000000000200000000000200000
	000000400000000000400000000000800000ffffffffffff
	000100000000000100000000000200000000000200000000
	000400000000000400000000000800000000000800000000
	001000000000001000000000002000000000002000000000
	004000000000004000000000008000000000ffffffffffff>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P12 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#055 /minus 8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /hypen 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Bold /Times-Bold-iso isovec ReEncode
/Courier /Courier-iso isovec ReEncode
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
%%Page: 1 1
10 setmiterlimit
 0.03000 0.03000 sc
/Courier-iso ff 360.00 scf sf
10200 1800 m
gs 1 -1 sc (pint) dup sw pop 2 div neg 0 rm  col0 sh gr
/Courier-iso ff 360.00 scf sf
7200 1800 m
gs 1 -1 sc (f) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Bold-iso ff 720.00 scf sf
3300 1800 m
gs 1 -1 sc (...) dup sw pop 2 div neg 0 rm  col0 sh gr
% Polyline
7.500 slw
 [60] 0 sd
gs  clippath
1304 1188 m 1379 1237 l 1499 1052 l 1380 1154 l 1423 1003 l cp
eoclip
n 9300 1350 m 9300 1349 l 9299 1347 l 9297 1342 l 9294 1336 l 9290 1326 l
 9284 1314 l 9277 1299 l 9268 1282 l 9257 1262 l 9244 1240 l
 9229 1217 l 9213 1192 l 9195 1167 l 9176 1142 l 9155 1117 l
 9133 1092 l 9110 1068 l 9085 1045 l 9058 1022 l 9031 1000 l
 9001 980 l 8970 960 l 8937 940 l 8901 922 l 8863 903 l
 8823 886 l 8780 868 l 8734 851 l 8684 834 l 8631 817 l
 8575 800 l 8541 790 l 8506 780 l 8470 770 l 8433 760 l
 8395 750 l 8355 740 l 8314 730 l 8271 720 l 8227 709 l
 8182 699 l 8136 688 l 8088 678 l 8038 667 l 7988 657 l
 7936 646 l 7883 635 l 7828 625 l 7772 614 l 7715 604 l
 7657 593 l 7597 583 l 7537 572 l 7475 562 l 7413 552 l
 7349 541 l 7285 531 l 7220 521 l 7154 512 l 7088 502 l
 7021 493 l 6954 484 l 6886 475 l 6818 466 l 6750 458 l
 6682 450 l 6614 442 l 6545 434 l 6477 427 l 6409 420 l
 6341 413 l 6273 406 l 6206 400 l 6139 395 l 6072 389 l
 6005 384 l 5939 379 l 5874 375 l 5809 371 l 5744 367 l
 5679 363 l 5615 360 l 5552 358 l 5489 355 l 5425 353 l
 5363 351 l 5300 350 l 5237 349 l 5175 348 l 5112 348 l
 5049 348 l 4987 348 l 4923 349 l 4860 350 l 4797 351 l
 4733 352 l 4669 354 l 4604 357 l 4539 359 l 4475 362 l
 4409 365 l 4344 369 l 4279 372 l 4213 377 l 4147 381 l
 4082 386 l 4016 391 l 3950 396 l 3885 402 l 3820 407 l
 3755 413 l 3690 420 l 3626 426 l 3562 433 l 3499 440 l
 3437 447 l 3375 455 l 3314 462 l 3254 470 l 3194 478 l
 3136 486 l 3079 494 l 3022 503 l 2967 511 l 2913 519 l
 2860 528 l 2808 536 l 2758 545 l 2709 554 l 2661 562 l
 2614 571 l 2569 580 l 2525 588 l 2482 597 l 2440 606 l
 2400 615 l 2361 623 l 2323 632 l 2286 641 l 2250 649 l
 2216 658 l 2182 666 l 2150 675 l 2092 691 l 2038 707 l
 1987 723 l 1939 740 l 1894 757 l 1851 774 l 1811 793 l
 1773 812 l 1737 831 l 1702 852 l 1669 874 l 1637 897 l
 1606 921 l 1576 946 l 1547 971 l 1520 997 l 1494 1024 l
 1469 1050 l 1447 1075 l 1426 1099 l 1408 1121 l 1392 1141 l
 1379 1158 l 1369 1172 l 1361 1183 l
 1350 1200 l gs col0 s gr gr
 [] 0 sd
% arrowhead
30.000 slw
n 1423 1003 m 1380 1154 l 1499 1052 l 1423 1003 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
7.500 slw
 [60] 0 sd
gs  clippath
246 2057 m 182 2121 l 357 2295 l 283 2158 l 420 2232 l cp
eoclip
n 6375 2025 m 6374 2026 l 6373 2028 l 6370 2033 l 6366 2039 l 6360 2049 l
 6352 2061 l 6342 2075 l 6329 2092 l 6315 2111 l 6298 2131 l
 6280 2153 l 6259 2175 l 6238 2197 l 6215 2219 l 6191 2241 l
 6165 2261 l 6139 2281 l 6111 2301 l 6082 2319 l 6051 2336 l
 6019 2352 l 5985 2368 l 5948 2383 l 5910 2397 l 5869 2411 l
 5825 2424 l 5778 2437 l 5728 2450 l 5675 2463 l 5643 2470 l
 5609 2477 l 5575 2484 l 5539 2491 l 5502 2499 l 5464 2506 l
 5424 2513 l 5383 2520 l 5341 2528 l 5298 2535 l 5253 2542 l
 5207 2549 l 5160 2556 l 5112 2563 l 5062 2571 l 5011 2578 l
 4959 2585 l 4906 2592 l 4852 2598 l 4797 2605 l 4742 2612 l
 4685 2618 l 4627 2625 l 4569 2631 l 4511 2637 l 4451 2643 l
 4392 2649 l 4332 2655 l 4272 2661 l 4212 2666 l 4151 2671 l
 4091 2676 l 4031 2681 l 3971 2685 l 3911 2689 l 3851 2693 l
 3792 2697 l 3734 2701 l 3676 2704 l 3618 2707 l 3561 2710 l
 3505 2713 l 3449 2715 l 3394 2717 l 3339 2719 l 3285 2721 l
 3232 2722 l 3180 2723 l 3128 2724 l 3076 2725 l 3025 2725 l
 2975 2725 l 2918 2725 l 2862 2724 l 2806 2724 l 2751 2722 l
 2695 2721 l 2640 2719 l 2585 2717 l 2529 2715 l 2474 2712 l
 2419 2709 l 2364 2706 l 2309 2703 l 2254 2699 l 2199 2695 l
 2145 2690 l 2091 2685 l 2037 2680 l 1983 2675 l 1930 2670 l
 1877 2664 l 1825 2658 l 1774 2652 l 1723 2645 l 1673 2639 l
 1624 2632 l 1575 2625 l 1528 2618 l 1482 2611 l 1437 2603 l
 1393 2596 l 1350 2588 l 1308 2581 l 1268 2573 l 1229 2566 l
 1191 2558 l 1154 2551 l 1119 2543 l 1084 2535 l 1051 2528 l
 1019 2520 l 989 2513 l 959 2505 l 930 2497 l 903 2490 l
 876 2482 l 850 2475 l 806 2462 l 765 2448 l 726 2435 l
 690 2421 l 655 2407 l 622 2392 l 590 2376 l 559 2360 l
 528 2343 l 499 2324 l 469 2305 l 440 2284 l 412 2263 l
 384 2242 l 357 2220 l 332 2199 l 309 2179 l 288 2160 l
 269 2143 l 255 2129 l 243 2118 l
 225 2100 l gs col0 s gr gr
 [] 0 sd
% arrowhead
45.000 slw
n 420 2232 m 283 2158 l 357 2295 l 420 2232 l  cp gs 0.00 setgray ef gr  col0 s
/Courier-iso ff 360.00 scf sf
1725 1800 m
gs 1 -1 sc (f) dup sw pop 2 div neg 0 rm  col0 sh gr
/Courier-iso ff 270.00 scf sf
4950 675 m
gs 1 -1 sc (pint+1) dup sw pop 2 div neg 0 rm  col0 sh gr
/Courier-iso ff 270.00 scf sf
4125 2925 m
gs 1 -1 sc (f) dup sw pop 2 div neg 0 rm  col0 sh gr
/Courier-iso ff 270.00 scf sf
5100 3600 m
gs 1 -1 sc (pint) dup sw pop 2 div neg 0 rm  col0 sh gr
/Courier-iso ff 180.00 scf sf
4875 1875 m
gs 1 -1 sc (N-1) col0 sh gr
/Courier-iso ff 360.00 scf sf
4725 1800 m
gs 1 -1 sc (f) dup sw pop 2 div neg 0 rm  col0 sh gr
/Courier-iso ff 180.00 scf sf
1875 1875 m
gs 1 -1 sc (1) dup sw pop 2 div neg 0 rm  col0 sh gr
% Polyline
7.500 slw
 [60] 0 sd
gs  clippath
85 2063 m 8 2110 l 121 2298 l 83 2147 l 198 2252 l cp
eoclip
n 9300 2025 m 9299 2026 l 9298 2029 l 9296 2034 l 9291 2042 l 9285 2053 l
 9277 2068 l 9267 2086 l 9255 2108 l 9240 2133 l 9223 2160 l
 9204 2190 l 9182 2221 l 9159 2254 l 9135 2287 l 9109 2321 l
 9081 2354 l 9053 2387 l 9023 2419 l 8992 2449 l 8960 2479 l
 8927 2508 l 8892 2535 l 8856 2562 l 8819 2587 l 8779 2612 l
 8738 2635 l 8694 2658 l 8649 2680 l 8600 2702 l 8548 2724 l
 8494 2745 l 8436 2766 l 8375 2788 l 8339 2800 l 8302 2812 l
 8264 2824 l 8224 2836 l 8184 2848 l 8142 2860 l 8099 2873 l
 8054 2885 l 8009 2897 l 7962 2910 l 7914 2922 l 7864 2935 l
 7813 2947 l 7761 2959 l 7708 2972 l 7653 2984 l 7597 2997 l
 7540 3009 l 7481 3022 l 7421 3034 l 7360 3046 l 7298 3059 l
 7235 3071 l 7171 3083 l 7106 3095 l 7040 3106 l 6973 3118 l
 6905 3129 l 6836 3140 l 6767 3151 l 6697 3162 l 6627 3172 l
 6556 3182 l 6485 3192 l 6414 3202 l 6342 3211 l 6270 3220 l
 6198 3229 l 6126 3237 l 6054 3245 l 5982 3253 l 5910 3260 l
 5838 3267 l 5766 3274 l 5695 3280 l 5624 3286 l 5553 3291 l
 5483 3296 l 5412 3301 l 5343 3305 l 5273 3309 l 5204 3312 l
 5136 3315 l 5067 3318 l 4999 3320 l 4931 3322 l 4864 3323 l
 4797 3324 l 4730 3325 l 4663 3325 l 4595 3325 l 4528 3324 l
 4461 3323 l 4394 3322 l 4326 3320 l 4258 3318 l 4190 3315 l
 4122 3312 l 4053 3309 l 3984 3305 l 3915 3301 l 3845 3296 l
 3775 3291 l 3705 3286 l 3634 3280 l 3563 3274 l 3492 3268 l
 3421 3261 l 3349 3253 l 3278 3246 l 3206 3238 l 3135 3230 l
 3064 3221 l 2992 3212 l 2921 3203 l 2851 3193 l 2780 3184 l
 2710 3174 l 2641 3163 l 2572 3153 l 2503 3142 l 2435 3131 l
 2368 3120 l 2302 3109 l 2237 3097 l 2173 3086 l 2109 3074 l
 2047 3062 l 1986 3050 l 1925 3038 l 1866 3026 l 1809 3014 l
 1752 3002 l 1697 2990 l 1643 2978 l 1590 2965 l 1539 2953 l
 1488 2941 l 1439 2929 l 1392 2917 l 1346 2905 l 1301 2893 l
 1257 2881 l 1214 2870 l 1173 2858 l 1133 2846 l 1094 2835 l
 1056 2823 l 1020 2811 l 984 2800 l 924 2780 l 867 2760 l
 813 2740 l 762 2719 l 713 2699 l 668 2678 l 624 2657 l
 583 2635 l 544 2612 l 507 2589 l 470 2564 l 436 2539 l
 402 2513 l 370 2486 l 339 2457 l 309 2428 l 280 2398 l
 252 2368 l 225 2338 l 200 2308 l 176 2278 l 155 2249 l
 135 2222 l 117 2197 l 102 2175 l 89 2155 l 78 2139 l
 70 2126 l 64 2115 l
 55 2100 l gs col0 s gr gr
 [] 0 sd
% arrowhead
30.000 slw
n 198 2252 m 83 2147 l 121 2298 l 198 2252 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
7.500 slw
n 2400 1200 m
 3000 1200 l gs col0 s gr 
% Polyline
n 1200 1200 m 2400 1200 l 2400 2100 l 1200 2100 l
 cp gs col0 s gr 
% Polyline
n 0 1200 m 1200 1200 l 1200 2100 l 0 2100 l
 cp gs col0 s gr 
% Polyline
 [15 45] 45 sd
n 0 1200 m 300 1200 l 300 2100 l 0 2100 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P12 [24 0 0 -24 0.00 80.00] PATmp PATsp ef gr PATusp gs col0 s gr  [] 0 sd
/Courier-iso ff 180.00 scf sf
750 1875 m
gs 1 -1 sc (0) dup sw pop 2 div neg 0 rm  col0 sh gr
/Courier-iso ff 360.00 scf sf
600 1800 m
gs 1 -1 sc (f) dup sw pop 2 div neg 0 rm  col0 sh gr
% Polyline
n 2400 2100 m
 3000 2100 l gs col0 s gr 
% Polyline
 [15 45] 45 sd
n 1200 1200 m 1500 1200 l 1500 2100 l 1200 2100 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P12 [24 0 0 -24 80.00 80.00] PATmp PATsp ef gr PATusp gs col0 s gr  [] 0 sd
% Polyline
n 9000 1200 m 11400 1200 l 11400 2100 l 9000 2100 l
 cp gs col0 s gr 
% Polyline
n 6000 1200 m 8400 1200 l 8400 2100 l 6000 2100 l
 cp gs col0 s gr 
% Polyline
n 4200 1200 m 5400 1200 l 5400 2100 l 4200 2100 l
 cp gs col0 s gr 
% Polyline
n 3600 2100 m
 4200 2100 l gs col0 s gr 
% Polyline
n 3600 1200 m
 4200 1200 l gs col0 s gr 
$F2psEnd
rs
end
